name: Build and Publish to NPM

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Get current version
        id: current
        run: |
          echo "version=$(node -p 'require(\"./package.json\").version')" >> "$GITHUB_OUTPUT"
          echo "name=$(node -p 'require(\"./package.json\").name')" >> "$GITHUB_OUTPUT"

      - name: Get previous version
        id: previous
        run: |
          git fetch --depth=2
          PREV_VERSION=$(git show HEAD^:package.json | jq -r '.version')
          echo "version=$PREV_VERSION" >> $GITHUB_OUTPUT

      - name: Check if version changed
        id: version-changed
        run: |
          if [ "${{ steps.current.outputs.version }}" = "${{ steps.previous.outputs.version }}" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Check if already published
        id: version-check
        run: |
          PUBLISHED=$(npm view ${{ steps.current.outputs.name }}@${{ steps.current.outputs.version }} version || echo "null")
          if [ "$PUBLISHED" = "${{ steps.current.outputs.version }}" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        if: |
          steps.version-check.outputs.exists == 'false' &&
          steps.version-changed.outputs.changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish (unchanged)
        if: steps.version-changed.outputs.changed == 'false'
        run: echo "⏭️ Version not changed. Skipping publish."

      - name: Skip publish (already exists)
        if: |
          steps.version-check.outputs.exists == 'true' &&
          steps.version-changed.outputs.changed == 'true'
        run: echo "⚠️ Version already published. Skipping."
